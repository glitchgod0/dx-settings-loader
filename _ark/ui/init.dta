#include global.dta
#include cheats_funcs.dta
#include meta.dta
#include demolauncher/demo_launcher.dta
#include overshell.dta
#ifdef HX_PS3
#include meta_loading.dta
#include saveload.dta
#include game.dta
#endif
{platform_mgr set_notify_ui_location kOSNotifyBottomCenter}
{set $saveload_skip_upload FALSE}

;sets default track speed. 1.15 is 115%, 1.30 is 130% and so on.
{set $trackspeed 1.0}

;sets default song speed 1.15 is 115%, 1.30 is 130% and so on.
{set $speedmod 1.0}

;set default venue fps.
{set $emulatefps 24}

{set $slot1_color 0} ;0 = green, preset colors to GRYBO
{set $slot2_color 1} ;1 = red
{set $slot3_color 2} ;2 = yellow
{set $slot4_color 3} ;3 = blue
{set $slot5_color 4} ;4 = orange

;gem texture
{set $gem "rb2dx"}

;smasher texture
{set $smasher "rb2dx"}

;streak texture
{set $streak "rb4"}

;overdrive texture
{set $spotlight "rb4"}

;multiplier ring texture
{set $multiring "rb2dx"}

;overdrive bar texture
{set $odbar "rb2dx"}

;rails texture
{set $rails "none"}

;flames texture
{set $flames "rb2dx"}

;score texture
{set $scoretex "rb4"}

;vocal arrow texture
{set $voxarrow "rb2dx"}

;vocal notes texture
{set $voxnotes "rb2dx"}

;vocal overdrive texture
{set $voxod "none"}

;vocal highway texture
{set $voxhw "none"}

;track angle presets that closely match the source games
;available options: "rb2", "rb3", "rb4", "rr" "none"
{set $anglepreset "rb2"}

#define INIT_DTA_READER
(
   {foreach $entry {read_file #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30147/USRDIR/dx.dta" #endif}
      {if {== {elem $entry 0} {basename gem_colors}}
         {set $slot1_color
            {elem {find $entry gem_colors} 1}
         }
         {set $slot2_color
            {elem {find $entry gem_colors} 2}
         }
         {set $slot3_color
            {elem {find $entry gem_colors} 3}
         }
         {set $slot4_color
            {elem {find $entry gem_colors} 4}
         }
         {set $slot5_color
            {elem {find $entry gem_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename track_speed}}
         {set $trackspeed
            {elem {find $entry track_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename song_speed}}
         {set $speedmod
            {elem {find $entry song_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename emulate_fps}}
         {set $emulatefps
            {elem {find $entry emulate_fps} 1}
         }
      }
      {if {== {elem $entry 0} {basename gem_texture}}
         {set $gem
            {elem {find $entry gem_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename smasher_texture}}
         {set $smasher
            {elem {find $entry smasher_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename streak_texture}}
         {set $streak
            {elem {find $entry streak_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_texture}}
         {set $spotlight
            {elem {find $entry spotlight_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename multiring_texture}}
         {set $multiring
            {elem {find $entry multiring_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename odbar_texture}}
         {set $odbar
            {elem {find $entry odbar_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename rails_texture}}
         {set $rails
            {elem {find $entry rails_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename flames_texture}}
         {set $flames
            {elem {find $entry flames_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename score_texture}}
         {set $scoretex
            {elem {find $entry score_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxarrow_texture}}
         {set $voxarrow
            {elem {find $entry voxarrow_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxnotes_texture}}
         {set $voxnotes
            {elem {find $entry voxnotes_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxod_texture}}
         {set $voxod
            {elem {find $entry voxod_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxhw_texture}}
         {set $voxhw
            {elem {find $entry voxhw_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename angle_preset}}
         {set $anglepreset
            {elem {find $entry angle_preset} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nofail}}
         {set $mod_nofail
            {elem {find $entry mod_nofail} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_doublespeed}}
         {set $mod_doublespeed
            {elem {find $entry mod_doublespeed} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nohud}}
         {set $mod_nohud
            {elem {find $entry mod_nohud} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_newvenuesonly}}
         {set $mod_newvenuesonly
            {elem {find $entry mod_newvenuesonly} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_awesome}}
         {set $mod_awesome
            {elem {find $entry mod_awesome} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_blackvenue}}
         {set $mod_blackvenue
            {elem {find $entry mod_blackvenue} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitle}}
         {set $mod_songtitle
            {elem {find $entry mod_songtitle} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitlestats}}
         {set $mod_songtitlestats
            {elem {find $entry mod_songtitlestats} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_staticfills}}
         {set $mod_staticfills
            {elem {find $entry mod_staticfills} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_mididrum}}
         {set $mod_mididrum
            {elem {find $entry mod_mididrum} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_padguitar}}
         {set $mod_padguitar
            {elem {find $entry mod_padguitar} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_paddrum}}
         {set $mod_paddrum
            {elem {find $entry mod_paddrum} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_selectdeploy}}
         {set $mod_selectdeploy
            {elem {find $entry mod_selectdeploy} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_noquickrestart}}
         {set $mod_noquickrestart
            {elem {find $entry mod_noquickrestart} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_vocalgender}}
         {set $mod_vocalgender
            {elem {find $entry mod_vocalgender} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_legacybass}}
         {set $mod_legacybass
            {elem {find $entry mod_legacybass} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nosustain}}
         {set $mod_nosustain
            {elem {find $entry mod_nosustain} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb3sustain}}
         {set $mod_rb3sustain
            {elem {find $entry mod_rb3sustain} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nowhammyfx}}
         {set $mod_nowhammyfx
            {elem {find $entry mod_nowhammyfx} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_gemdivider}}
         {set $mod_gemdivider
            {elem {find $entry mod_gemdivider} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nocrowd}}
         {set $mod_nocrowd
            {elem {find $entry mod_nocrowd} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nomuting}}
         {set $mod_nomuting
            {elem {find $entry mod_nomuting} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_noflames}}
         {set $mod_noflames
            {elem {find $entry mod_noflames} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_flashbang}}
         {set $mod_flashbang
            {elem {find $entry mod_flashbang} 1}
         }
      }
   }
)
;{unless {file_exists dx.dta} INIT_DTA_WRITER}
{if {file_exists #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30147/USRDIR/dx.dta" #endif} INIT_DTA_READER}
